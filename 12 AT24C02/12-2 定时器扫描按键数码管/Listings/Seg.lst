C51 COMPILER V9.54   SEG                                                                   01/30/2024 14:56:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN .\Objects\Seg.obj
COMPILER INVOKED BY: F:\Keil5\C51\BIN\C51.EXE Seg.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Seg.lst
                    -) OBJECT(.\Objects\Seg.obj)

line level    source

   1          #include <REGF51RC.H>
   2          
   3          unsigned char Seg_Buf[9]={0,10,10,10,10,10,10,10,10}; // 初始不显示
   4          
   5          unsigned char Segment[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,
   6                                                                          0x6F,0x00,0x40}; // 0x00 不显示; 0x40 显示横杆
   7          
   8          void Seg_SetBuf(unsigned char Location, Number)
   9          {
  10   1              Seg_Buf[Location] = Number;
  11   1      }
  12          
  13          /* seg: 多位数码管显示函数
  14                  segsel: 段选信号, [1, 8]
  15                  number: 位选信号, [0, 9]
  16          */
  17          void Seg_scan(unsigned char segsel, number)
  18          {
  19   1              P0 = 0x00; // 清零
  20   1              
  21   1              // 位选信号 segsel( 通过控制 P2 寄存器实现)
  22   1              switch(segsel)
  23   1              {
  24   2                      case 1: P2_4 = 1, P2_3 = 1, P2_2 = 1; break;
  25   2                      case 2: P2_4 = 1, P2_3 = 1, P2_2 = 0; break;
  26   2                      case 3: P2_4 = 1, P2_3 = 0, P2_2 = 1; break;
  27   2                      case 4: P2_4 = 1, P2_3 = 0, P2_2 = 0; break;
  28   2                      case 5: P2_4 = 0, P2_3 = 1, P2_2 = 1; break;
  29   2                      case 6: P2_4 = 0, P2_3 = 1, P2_2 = 0; break;
  30   2                      case 7: P2_4 = 0, P2_3 = 0, P2_2 = 1; break;
  31   2                      case 8: P2_4 = 0, P2_3 = 0, P2_2 = 0; break;
  32   2              }
  33   1              
  34   1              // 段选信号 segment(通过控制 P0 寄存器实现)
  35   1              P0 = Segment[number];
  36   1              
  37   1              // 消影
  38   1              //Delay(1); // 为了数字稳定显示
  39   1      }
  40          
  41          void Seg_Loop() // 驱动函数
  42          {
  43   1              static unsigned char i = 1;
  44   1              Seg_scan(i, Seg_Buf[i]);
  45   1              i ++;
  46   1              if(i >= 9) i = 1;
  47   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.54   SEG                                                                   01/30/2024 14:56:36 PAGE 2   

   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
