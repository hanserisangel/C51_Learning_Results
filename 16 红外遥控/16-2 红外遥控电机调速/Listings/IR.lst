C51 COMPILER V9.54   IR                                                                    02/02/2024 21:28:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: F:\Keil5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst) 
                    -OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGF51RC.H>
   2          #include "Int0.h"
   3          #include "Timer.h"
   4          
   5          unsigned int IR_Time; 
   6          unsigned char IR_State; // 状态机状态
   7          
   8          unsigned char IR_Data[4]; // 32位数据
   9          unsigned char IR_pData; // 数组索引指针
  10          
  11          unsigned char IR_DataFlag; // 收到数据
  12          unsigned char IR_RepeatFlag; // 收到重复位
  13          unsigned char IR_Address; // 地址
  14          unsigned char IR_Command; // 命令
  15          
  16          void IR_Init()
  17          {
  18   1              Int0_Init();
  19   1              Timer_Init();
  20   1      }
  21          
  22          // 收到数据
  23          unsigned char IR_GetDataFlag(void)
  24          {
  25   1              if(IR_DataFlag)
  26   1              {
  27   2                      IR_DataFlag = 0;
  28   2                      return 1;
  29   2              }
  30   1              return 0;
  31   1      }
  32          
  33          // 收到连发帧
  34          unsigned char IR_GetRepeatFlag(void)
  35          {
  36   1              if(IR_RepeatFlag)
  37   1              {
  38   2                      IR_RepeatFlag = 0;
  39   2                      return 1;
  40   2              }
  41   1              return 0;
  42   1      }
  43          
  44          // 收到地址
  45          unsigned char IR_GetAddress(void)
  46          {
  47   1              return IR_Address;
  48   1      }
  49          
  50          // 收到命令
  51          unsigned char IR_GetCommand(void)
  52          {
  53   1              return IR_Command;
  54   1      }
C51 COMPILER V9.54   IR                                                                    02/02/2024 21:28:19 PAGE 2   

  55          
  56          // 中断函数, 下降沿触发
  57          void Int0_Routine(void) interrupt 0
  58          {
  59   1              if(IR_State == 0) // 状态0, 空闲状态
  60   1              {
  61   2                      Timer_SetCounter(0);    // 从0开始
  62   2                      Timer_Run(1);                   // 开启定时器
  63   2                      IR_State = 1;                   // 状态转移
  64   2              }
  65   1              else if(IR_State==1) // 状态1, 等待start 或 repeat 信号
  66   1              {
  67   2                      IR_Time = Timer_GetCounter();   //两次下降沿间隔时间
  68   2                      Timer_SetCounter(0);    //清零
  69   2                      //计时 13.5ms, Start信号
  70   2                      if(IR_Time > 12442-500 && IR_Time < 12442+500)
  71   2                      {
  72   3                              IR_State=2;                     // 状态转移
  73   3                      }
  74   2                      //计时 11.25ms, Repeat信号
  75   2                      else if(IR_Time > 10368-500 && IR_Time < 10368+500)
  76   2                      {
  77   3                              IR_RepeatFlag = 1;      
  78   3                              Timer_Run(0);           
  79   3                              IR_State = 0;                   // 状态转移到 0
  80   3                      }
  81   2                      else                                        // 接收出错
  82   2                      {
  83   3                              IR_State = 1;                   
  84   3                      }
  85   2              }
  86   1              else if(IR_State==2) // 状态 2, 接收数据
  87   1              {
  88   2                      IR_Time = Timer_GetCounter();
  89   2                      Timer_SetCounter(0);
  90   2                      // 计时 1120us, 数据 0
  91   2                      if(IR_Time > 1032-500 && IR_Time < 1032+500)
  92   2                      {
  93   3                              IR_Data[IR_pData/8] &= ~(0x01<<(IR_pData%8));   //对应位清零
  94   3                              IR_pData ++;                    //数据位置指针自增
  95   3                      }
  96   2                      // 计时 2250us, 数据 1
  97   2                      else if(IR_Time > 2074-500 && IR_Time < 2074+500)
  98   2                      {
  99   3                              IR_Data[IR_pData/8] |= (0x01<<(IR_pData%8));
 100   3                              IR_pData ++;                    
 101   3                      }
 102   2                      else                                    // 接收出错
 103   2                      {
 104   3                              IR_pData = 0;                   
 105   3                              IR_State = 1;                   
 106   3                      }
 107   2                      
 108   2                      if(IR_pData >= 32)              // 数据完整
 109   2                      {
 110   3                              IR_pData = 0;                   
 111   3                              if((IR_Data[0] == ~IR_Data[1]) && (IR_Data[2] == ~IR_Data[3])) // 数据检验
 112   3                              {
 113   4                                      IR_Address = IR_Data[0];        
 114   4                                      IR_Command = IR_Data[2];
 115   4                                      IR_DataFlag = 1;        
 116   4                              }
C51 COMPILER V9.54   IR                                                                    02/02/2024 21:28:19 PAGE 3   

 117   3                              Timer_Run(0);           
 118   3                              IR_State = 0;                   
 119   3                      }
 120   2              }
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
